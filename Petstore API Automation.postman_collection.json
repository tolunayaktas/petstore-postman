{
	"info": {
		"_postman_id": "949eb24d-7526-4c6b-ae78-668b57e33c41",
		"name": "Petstore API Automation",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Positive Tests",
			"item": [
				{
					"name": "Find By Status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/findByStatus?status=available",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "available"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a new pet to the store",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.test(\"check the pet if added\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"karabas\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"id\", _.random(1000, 9999))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{id}},\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"kangal\"\r\n  },\r\n  \"name\": \"karabas\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Pet By ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Pet",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 200',function(){\r",
									"    pm.response.to.have.status(200)\r",
									"})\r",
									"\r",
									"pm.test(\"check the pet if updated\", function () {\r",
									"    var jsonData = pm.response.json();\r",
									"    pm.expect(jsonData.name).to.eql(\"karabasupdate\");\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{id}},\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"kangal\"\r\n  },\r\n  \"name\": \"karabasupdate\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Pet",
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/{{id}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Negative Tests",
			"item": [
				{
					"name": "Find Pets with Invalid Status*",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 400',function(){\r",
									"    pm.response.to.have.status(400)\r",
									"})"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/findByStatus?status=invalidStatus",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"findByStatus"
							],
							"query": [
								{
									"key": "status",
									"value": "invalidStatus"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Find Pets with Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 404',function(){\r",
									"    pm.response.to.have.status(404)\r",
									"})\r",
									"\r",
									"//It should be \"400\" for invalid values but somehow it allows so I tested with so unique value to get \"404\"."
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/{{invalidID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{invalidID}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Add a New Pet with Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 400',function(){\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						},
						{
							"listen": "prerequest",
							"script": {
								"exec": [
									"pm.environment.set(\"id\", _.random(1000, 9999))\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{invalidID}}, //It has to response bad request with string\r\n  \"category\": {\r\n    \"id\": 0,\r\n    \"name\": \"kangal\"\r\n  },\r\n  \"name\": \"karaba≈ü\",\r\n  \"photoUrls\": [\r\n    \"string\"\r\n  ],\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update a Pet with Missing Body Fields",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 400',function(){\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"id\": {{id}},\r\n  \"category\": {\r\n\r\n  \"tags\": [\r\n    {\r\n      \"id\": 0,\r\n      \"name\": \"string\"\r\n    }\r\n  ],\r\n  \"status\": \"available\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{url}}/pet",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet"
							]
						}
					},
					"response": []
				},
				{
					"name": "Delete a Pet with Invalid ID",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('check status 400',function(){\r",
									"    pm.response.to.have.status(400)\r",
									"})\r",
									"\r",
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [],
						"url": {
							"raw": "{{url}}/pet/{{invalidID}}",
							"host": [
								"{{url}}"
							],
							"path": [
								"pet",
								"{{invalidID}}"
							]
						}
					},
					"response": []
				}
			]
		}
	]
}